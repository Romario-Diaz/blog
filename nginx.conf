server {
    listen 80;
    server_name localhost www.elroma.com; # Reemplaza con tu dominio

    location / {
        proxy_pass http://roma.blog:3000; # Nombre del servicio definido en Docker Compose y puerto interno de la aplicaci√≥n
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

# server {
#     listen 80;
#     server_name localhost www.elroma.com;
#     # location / {
#     #     # el proxy debe pasar todos los headers
#     #     proxy_pass_request_headers on;
#     #     proxy_set_header Upgrade $http_upgrade;
#     #     proxy_set_header Connection "upgrade";
#     #     proxy_http_version 1.1;
#     #     # IP(s) client
#     #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     #     proxy_set_header Host $host;
#     #     rewrite /api/(.*) /$1 break;
#     #     proxy_pass http://el.roma.apis:3000/;
#     #     # proxy_redirect off;
#     # }
#     location / { 
#         proxy_pass http://roma.blog:3000; # Cambia al puerto en el que se ejecuta tu app Node.js
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }
# } 